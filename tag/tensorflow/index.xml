<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TensorFlow | Academic</title><link>https://AI-Huang.github.io/tag/tensorflow/</link><atom:link href="https://AI-Huang.github.io/tag/tensorflow/index.xml" rel="self" type="application/rss+xml"/><description>TensorFlow</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Fri, 29 Jan 2021 17:00:00 +0800</lastBuildDate><image><url>https://AI-Huang.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url><title>TensorFlow</title><link>https://AI-Huang.github.io/tag/tensorflow/</link></image><item><title>A TensorFlow Implementation of AdderNet</title><link>https://AI-Huang.github.io/research/addernet_tensorflow/</link><pubDate>Fri, 29 Jan 2021 17:00:00 +0800</pubDate><guid>https://AI-Huang.github.io/research/addernet_tensorflow/</guid><description>&lt;p>This is a A TensorFlow Implementation of AdderNet. The original paper, AdderNet (&lt;a href="https://arxiv.org/abs/1912.13200" target="_blank" rel="noopener">H. Chen, et al., AdderNet: Do We Really Need Multiplications in Deep Learning?&lt;/a>), is implemented with PyTorch. Here we provide a TensorFlow alternative for training and evaluating the Adder layer operator and related network backbones.&lt;/p>
&lt;p>The codes is available (click the &amp;ldquo;Codes&amp;rdquo; button).&lt;/p></description></item></channel></rss>